#include <iostream>
#include <cmath>
#include <cstring>
#include <cstdlib>
//
//using std::string
//
using namespace std;
#include <stack>;

char a[3] = {'(','{','['};
char b[3] = {')','}',']'};

int indx(int n,char l[],char c){
    for(int i = 0;i < n;i++){
        if(l[i] == c){
            return i;
        }
    }
}

int balanced(char l[],int n){
    stack<char>S;
    for(int i = 0;i < n;i++){
        if(l[i] == a[0] || l[i] == a[1] || l[i] == a[2]){
            S.push(l[i]);
        }
        if(l[i] == b[0] || l[i] == b[1] || l[i] == b[2]){
            if(indx(n,a,S.top()) != indx(n,b,l[i])){
                return 0;
            }
            else{
                S.pop();
            }
        }
    }
    if(S.empty() == true){
        return 1;
    }
    else{
        return 0;
    }
}


int main(){
    /*\n;||(or) e &&(and)*/
    int n = 6;
    char c[n] = {'[','(',')','{','}',']'};
    int k = balanced(c,n);
    printf("%d",k);






return 0;
 }
